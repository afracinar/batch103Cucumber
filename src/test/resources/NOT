*****CUCUMBER KURULUMU*****
-Cucumber Page Object Model için oluşturduğumuz klasörler :
     pages --> page objectler için kullanılır
     runners --> test caseleri run etmek, raporlar eklemek, feature file ile step definitionsları birleştirmek için kullanılır
     stepdefinitions --> java kodları
     utilities --> reusable methodlar , driver, ConfigReader ...

-Cucumber feature klasörü:
     Tüm feature file'lar o klasöre gider
     Tüm test case'ler gherken dilinde bu klasörde yazılır.

--------- 19.02.2023 DAY 2 ---------------
1. Feature file oluştur: ilkfeaturefile.feature
    Feature: ilk feature file

      Scenario: TC01_google_iphone_arama

      Given kullanici google gider
      When kullanici iphone icin arama yapar
      Then sonuclarda iphone oldugunu dogrular

2. Runner class ı run et
3. Consoldan missing step definitions'ları kopyala
4. stepdefinitions klasöründe GoogleStepDefinitions oluştur ve kopyaladığımız şeyleri yapıştır

         @Given("kullanici google gider")
         public void kullanici_google_gider() {

         }
         @When("kullanici iphone icin arama yapar")
         public void kullanici_iphone_icin_arama_yapar() {

         }
         @Then("sonuclarda iphone oldugunu dogrular")
         public void sonuclarda_iphone_oldugunu_dogrular() {

         }
5. stepdefinitionslara gerekli java kodlarını yaz
          @Given("kullanici google gider")
             public void kullanici_google_gider() {
                 Driver.getDriver().get(ConfigReader.getProperty("google_url"));
          }
     NOTE: Elementleri bulmak için page paketini kullan


     NOOTT
     #CUCUMBER'DAKİ OTOMASYON ADIMLARI NELERDİR?
     #1-Feature File : Gherkin language ile test senaryolarını oluşturur.Test caseleri feature file da yazarız
     #2-Runner Package oluştur : @RunWith(Cucumber.class)  - @CucumberOptions(.....) - tags="@tagname")
                          Feature file'ları run etmek için çalıştırırız
     #3-Stepdefinitions package oluştur: Çalıştırdığımız java kodlarını konsoldan alıp stepdefinitions packkage'e koyarız
     #4-java kodlarını tamamla

     UndefinedStepException : Bu hata mesajı tanımlanmamış eksik kod olduğunda konsolda çıkar.
                              harf harf satır satır aynı olmak zorundadır.yoksa exception çıkar
     NOT: Bu şekilde yeni step definitionlar beklendiğinde,zamandan tasarruf sağlamak için runnerda dryRun=true kullanılır
           dryRun= Run browserı açmaz zamandan tasarruf sağlar sadece kodlarda eksik var mı diye bakar çok kısa sürer


-------------SCENARIO OUTLINE(aynı senaryo farklı datalar olduğunda kullanılır)-------------
      #Scenario: -> Scenario Outline: a dönüşüyor
      #"" -> "<sutun_ismi>" ne dönüşüyor
      #Examples kelimesi Scenario Outline'dan sonra kullanılmalı.
      #Example verilerin kullanıldığı yerdir
      #Scenario Outline data driven testing için kullanılır
      #yani benzer senaryoyu tekrar tekrar farklı datalarla çalıştırmak için kullanılır
      #Scenario Outline cucumber'da çok önemlidir.
      #Ne zaman birden fazla data ile işlem yaparsak o zaman scenario outline kullanabiliriz.
      #Scenario Outline Excel ile automasyon yapmaya benzer tek fark kullanımı daha kolaydır

--------------Hangi raporları kullaırsın?----------
daha okunaklı olduğu için html raporlarını kullanırım.
json okunması daha zordur ama kullanılabilir.daha çok developerların data çekmek için kullandığı raporlardır

-------------DATA TABLES-----------------
Scenario Outline kadar tercih edilmez.

---SCENARIO OUTLİNE----
Scenario Outline ile DDT yapılır.Scenario Outline iyi bilinmelidir.
Test adımlarını (steps) data reusable yapmak için kullanılır
en çok kullanılan cucumber özelliklerinden biridir.
Examples kelimesi veri girişleri için kullanılmalıdır
Stepdefinitionslardaki data tipi STRING'dir
Examples kelimesi en sonda kullanılır

----DATA TABLES----
Data Tables ile DDT yapılabilir
Test adımlarını (steps) data reusable yapmak için kullanılır
Scenario Outline ile yaygın değildir.
Examples kelimesi kullanılmaz
Stepdefinitionslardaki data tipi DATATABLE'dir
DataTable'lar ara adımlarda (steps) kullanılabilir

NOT: Datatables ve Scenario Outline birlikte kullanılabilir

---COLLECTIONS NEDİR?
list,set,queue
---COLLECTIONS'LARI FRAMWORK'ÜNDE NASIL KULLANDIN?
collections'ları özellikle çoklu data ihtiyacımız olduğunda kullanırız.örneğin findElements methodu kullanıldığında birden
fazla element beklediğim için List<Webelement> kullanırız ya da çoklu pencere geçişlerinde getWindowHandles ile Set kullanırız.
Droğdown'daki tüö elementleri getOptions metot ile aldığımda List<WebElement> e koyarız.Framwork'ümüzde bazı utility
class'lar kullanıyoruz.Bunların içinde çok sayıda collections kullanıyoruz
Cucumber'da DataTables kullandığımda gelen verileri List ya da Map'te depolayabiliriz.

//CUCUMBER DAKİ RAPORLARI CLOUD A EKLEME
1. resources dosyasinin altında cucumber properties dosyası olustur : cucumber.properties
2. Su kodu ekle: cucumber.publish.enabled=true
3. Testi calistir. Bu sekilde cucumber html raporu cloud yuklenecektir. Fakat GitHub ile girls yapilmassa 24 saat icinde silinecektir. Bu yüzden GitHub ile giriş yapalım.
4. Login with GitHub a tikla > Authorize SmartBear
5. Create Collection
6. Tokeni cucumber.properties e ekle
7. Testi tekrar calistir. Collections klasorunde raporlar olusucakdir.

